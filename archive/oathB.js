const express = require('express');
const axios = require('axios');
const querystring = require('querystring');
require('dotenv').config();

const app = express();
app.use(express.static('public'));

const CLIENT_ID = process.env.WEBFLOW_CLIENT_ID;
const CLIENT_SECRET = process.env.WEBFLOW_CLIENT_SECRET;
const REDIRECT_URI = process.env.REDIRECT_URI;

app.get('/auth', (req, res) => {
    const { topic, length, comprehension } = req.query;
    const state = JSON.stringify({ topic, length, comprehension });
    const authUrl = `https://webflow.com/oauth/authorize?response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=assets:read assets:write authorized_user:read cms:read cms:write custom_code:read custom_code:write forms:read forms:write pages:read pages:write sites:read sites:write&state=${encodeURIComponent(state)}`;
    res.redirect(authUrl);
});

app.get('/callback', async (req, res) => {
    const { code, state } = req.query;
    const { topic, length, comprehension } = JSON.parse(state);

    try {
        const response = await axios.post('https://api.webflow.com/oauth/access_token', querystring.stringify({
            client_id: CLIENT_ID,
            client_secret: CLIENT_SECRET,
            grant_type: 'authorization_code',
            code,
            redirect_uri: REDIRECT_URI
        }));

        const { access_token } = response.data;
        console.log(`Access Token: ${access_token}`);

        // Call ChatGPT API to generate blog post
        const chatGptResponse = await axios.post(
            process.env.CHATGPT_API_URL,
            {
                model: 'gpt-3.5-turbo',
                messages: [{ role: 'system', content: `Generate a blog post about ${topic} with a length of ${length} for an audience with ${comprehension} level of comprehension.` }],
                max_tokens: 1500,
                temperature: 0.5
            },
            {
                headers: {
                    'Authorization': `Bearer ${process.env.CHATGPT_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            }
        );

        const blogContent = chatGptResponse.data.choices[0].message.content;
        console.log('Generated Blog Content:', blogContent);

        // Generate short summary
        const summaryPrompt = `Summarize the following blog post in 250 characters: ${blogContent}`;
        const summaryResponse = await axios.post(
            process.env.CHATGPT_API_URL,
            {
                model: 'gpt-3.5-turbo',
                messages: [{ role: 'system', content: summaryPrompt }],
                max_tokens: 175,
                temperature: 0.4
            },
            {
                headers: {
                    'Authorization': `Bearer ${process.env.CHATGPT_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            }
        );

        const blogSummary = summaryResponse.data.choices[0].message.content;

        // Generate Image using DALL-E
        const dalleResponse = await axios.post(
            process.env.DALLE_API_URL,
            {
                prompt: `Create an image that captures the essence of the following blog post: ${blogSummary.slice(0, 100)}`,
                n: 1,
                size: '512x512',
                response_format: 'url',
                model: 'dall-e-2',
                style: 'vivid'
            },
            {
                headers: {
                    'Authorization': `Bearer ${process.env.CHATGPT_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            }
        );

        const imageUrl = dalleResponse.data.data[0].url;
        console.log('DALL-E Response:', dalleResponse.data);

        if (!imageUrl) {
            throw new Error('No image generated by DALL-E');
        }

        // Prepare data for Webflow CMS
        const cmsData = {
            fields: {
                name: `Blog Post About ${topic}`,
                slug: `blog-post-about-${topic.toLowerCase().replace(/\s+/g, '-')}`,
                'post-body': blogContent,
                'post-summary': blogSummary,
                'main-image': imageUrl,
                tags: ['example', 'blog', 'post'],
            }
        };

        // Send data to Webflow CMS via API URL
        const webflowResponse = await axios.post(
            process.env.WEBFLOW_API_URL,
            { fields: cmsData.fields },
            {
                headers: {
                    'Authorization': `Bearer ${access_token}`,
                    'Content-Type': 'application/json',
                    'accept-version': '1.0.0'
                }
            }
        );

        console.log('Webflow Response:', webflowResponse.data);
        res.send('Blog post generated and added to Webflow CMS successfully');
    } catch (error) {
        console.error('Error processing request:', error);
        if (error.response) {
            console.error('Error Response Data:', error.response.data);
        }
        res.status(500).send('Internal Server Error');
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`OAuth server is running on port ${PORT}`);
});